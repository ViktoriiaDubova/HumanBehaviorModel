@model HBM.Web.ViewModels.TagsPageViewModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Tags";
    
}

<div class="row align-content-center">
@{
    <div class="col-md-8">
        <div class="d-flex flex-wrap mb-4">
            @foreach (var tag in Model.Tags)
            {
                var _class = tag.Id == Model.SelectedTag ? "btn btn-outline-success" : "btn btn-outline-primary";
                <a href="@Url.Action("Tags", new { selected = tag.Id })" class='@_class'>@tag.Key</a>
            }
        </div>

        @if (Model.Articles != null)
        {
            foreach (var article in Model.Articles)
            {
                <article class="post">
                    <div class="post-thumb">
                        <a href="@Url.Action("Show", new { id = article.Id })">
                            @{
                                var img = article.Image?.Path ?? "~/Content/img/no-image.png";
                                img = Url.Content(img);
                            }
                            <img class="img-preview" src="@img" alt="">
                        </a>
                        <a href="@Url.Action("Show", new { id = article.Id })" class="post-thumb-overlay text-center">
                            <div class="text-uppercase text-center">View Post</div>
                        </a>
                    </div>
                    <div class="post-content">
                        <header class="entry-header text-center text-uppercase">@article.Header</header>
                        <div class="entry-content">
                            @article.Description
                        </div>
                        <br />
                        <div class="text-center text-uppercase">
                            @{
                                @Html.ActionLink("Continue reading", "Show", "Article", new { id = article.Id }, new { @class = "btn btn-outline-dark" })
                            }
                        </div>
                        <div class="decoration mt-4">
                            @{
                                if (article.Tags != null && article.Tags.Count > 0)
                                {
                                    foreach (var tag in article.Tags)
                                    {
                                        var _class = tag.Id == Model.SelectedTag ? "btn btn-outline-secondary" : "btn btn-outline-primary";
                                        <a href="@Url.Action("Tags", new { selected = tag.Id })" class="@_class">@tag.Key</a>
                                    }
                                }
                            }
                        </div>
                    </div>
                    <div class="social-share">
                        <span class="social-share-title float-left text-capitalize">
                            Posted by <b>@article.User.UserName</b> on @article.DatePost
                            @{
                                if (article.DateEdited != null)
                                {
                                    <br />
                                    <span>Last edited on @article.DateEdited</span>
                                }
                            }
                        </span>
                        <ul class="text-center float-right"></ul>
                    </div>
                </article>
            }
         }
    </div>
}
</div>

<br />
@if (Model.Articles != null)
{
    <div class="d-flex justify-content-center">
        <div class="p-2">
            <p style="margin-top:30%;">Page @(Model.Articles.PageCount < Model.Articles.PageNumber ? 0 : Model.Articles.PageNumber) of @Model.Articles.PageCount </p>
        </div>
        <div class="p-2">
            @Html.PagedListPager(Model.Articles, page => Url.Action("Index", new { page }))
        </div>
    </div>
}